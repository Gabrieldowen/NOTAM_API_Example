/* Customized buttons for base.html */
.submit {
  font-size: 1.5rem;
  font-weight: 700;
  color: #000000;
  padding: 0.2em 0.5em;
  background-color: #ffffff;
  border-radius: 10px;
  border-color: #0400ff;
  
  transition: all 0.3s;
}

/* The listed destinations */
.destination{
  display: flex;  
  gap: 10px; 
  white-space: nowrap; 
  position: relative;  
  align-items: center; 
  justify-content: center;
}

/* The button to delete destinations */
.delete{
  color: #000000;
  
  border: 5px double #ffffff;
  box-shadow: 0 0 0 1px #ff0000;
  background-image: url('images/minus.png');  
  
  background-position: center;   
  
  background-size: cover; 
  background-repeat: no-repeat; 

  width: 12px; 
  height: 12px;  

  border-radius: 50%; 
  position: absolute; 
  top: -5px; 
  right: -2px;
}

/* Hover animation for submit buttons */
.submit:hover{
  transform: translateY(-10px);
  background-color: #000000;
  color: #ffffff;
}

/* Arrow to go back */
#arrow{
  background-size: contain; 
  background-repeat: no-repeat;
  background-position: center;   
  width: auto;
  height: 40px;
  transform: translate(20px, 20px) scaleX(-1);

}

/* Custom loading text in base.html */
.custom-text {
  position: fixed;
  font-size: 24px; 
  color: #6052ac; 

  position: relative; 
  top: 25px; 
  right: -30px;
  
}

/* To make the loading symbol */
group {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 65vh; 
}

group .ticks{
  position: absolute;
  width: 5px;
  height: 5px;
  
}

group .ticks span {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: rotate(calc(30deg * var(--i)));
}

.ticks span::before{
  content: '';
  position: absolute;
  top: 0px;
  left: 5px;
  width: 20px;
  height: 75px;
  background: #005eff6d;
  border-radius: 50%;
  animation: tickTock 2s linear infinite;
  animation-delay: calc(0.05s * (var(--i)));
}

/* The animation of the symbol */
@keyframes tickTock{
  0%{
    opacity: 0;
  }
  50%{
    opacity: 100;
  }
  100%{
    opacity: 0;
  }
}


/* Custom animation, change the hue of the color constantly */
@keyframes changeColor {
  0% {
      filter: hue-rotate(0deg);
  }
  100%{
      filter: hue-rotate(360deg);
  }
}

/* Custom animation, change the opacity back from 0 to 100 and back to 0 */
@keyframes fadeIn {
  0%{
    opacity: 0;
  }
  50% {
    opacity: 100;
  }
  100% {
    opacity: 0;
  }
}

/* Hidden text attribute for changing from input requesting, to loading, to display. */
.hiddenObj {
    display: none;
}




/* styles.css */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
}

.accordion {
  max-width: vw;
  margin: 20px auto;
}

.accordion-item {
  border: 1px solid #ddd;
  margin-bottom: 2px;
}

.accordion-header {
  display: block;
  padding: 10px;
  background-color: #f1f1f1;
  cursor: pointer;
}

.accordion-content {
  display: none;
  padding: 10px;
}

/* Use :checked pseudo-class to toggle content visibility */
.accordion-item input:checked + .accordion-header + .accordion-content {
  display: block;
}